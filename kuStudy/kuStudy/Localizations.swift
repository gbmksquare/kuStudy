//
// Autogenerated by Laurine - by Jiri Trecak ( http://jiritrecak.com, @jiritrecak )
// Do not change this file manually!
//


// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---
// MARK: - Imports

import Foundation


// --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- --- ---
// MARK: - Localizations


public struct Localizations {


    public struct Common {

        /// Base translation: second
        public static var Second : String = NSLocalizedString("Common.Second", comment: "")

        /// Base translation: Available
        public static var Available : String = NSLocalizedString("Common.Available", comment: "")

        /// Base translation: Disabled
        public static var Disabled : String = NSLocalizedString("Common.Disabled", comment: "")

        /// Base translation: --
        public static var NoData : String = NSLocalizedString("Common.NoData", comment: "")

        /// Base translation: seconds
        public static var Seconds : String = NSLocalizedString("Common.Seconds", comment: "")

        /// Base translation: Studying Now
        public static var Studying : String = NSLocalizedString("Common.Studying", comment: "")

        /// Base translation: Science Campus
        public static var ScienceCampus : String = NSLocalizedString("Common.ScienceCampus", comment: "")

        /// Base translation: Error
        public static var Error : String = NSLocalizedString("Common.Error", comment: "")

        /// Base translation: minute
        public static var Minute : String = NSLocalizedString("Common.Minute", comment: "")

        /// Base translation: Out of Order
        public static var OutOfOrder : String = NSLocalizedString("Common.OutOfOrder", comment: "")

        /// Base translation: Liberal Art Campus
        public static var LiberalArtCampus : String = NSLocalizedString("Common.LiberalArtCampus", comment: "")

        /// Base translation: Total
        public static var Total : String = NSLocalizedString("Common.Total", comment: "")

        /// Base translation: Occupied
        public static var Used : String = NSLocalizedString("Common.Used", comment: "")

        /// Base translation: Printer
        public static var Printer : String = NSLocalizedString("Common.Printer", comment: "")

        /// Base translation: minutes
        public static var Minutes : String = NSLocalizedString("Common.Minutes", comment: "")

        /// Base translation: Scanner
        public static var Scanner : String = NSLocalizedString("Common.Scanner", comment: "")

        /// Base translation: Ineligible
        public static var Ineligible : String = NSLocalizedString("Common.Ineligible", comment: "")

    }

    public struct Alert {


        public struct Title {


            public struct Notification {

                /// Base translation: Access Denied
                public static var AccessDenied : String = NSLocalizedString("Alert.Title.Notification.AccessDenied", comment: "")

            }
        }

        public struct Message {

            /// Base translation: You can't purchase items at this time.
            public static var PaymentError : String = NSLocalizedString("Alert.Message.PaymentError", comment: "")


            public struct AppStore {

                /// Base translation: Failed to open App Store.
                public static var Failed : String = NSLocalizedString("Alert.Message.AppStore.Failed", comment: "")

            }

            public struct Notification {

                /// Base translation: Remind me after
                public static var SetTimeInterval : String = NSLocalizedString("Alert.Message.Notification.SetTimeInterval", comment: "")

                /// Base translation: Notification is turned off. Please enable notification from Settings app.
                public static var AccessDenied : String = NSLocalizedString("Alert.Message.Notification.AccessDenied", comment: "")

            }
        }

        public struct Action {

            /// Base translation: Confirm
            public static var Confirm : String = NSLocalizedString("Alert.Action.Confirm", comment: "")

            /// Base translation: Cancel
            public static var Cancel : String = NSLocalizedString("Alert.Action.Cancel", comment: "")

            /// Base translation: Open Settings
            public static var OpenSettings : String = NSLocalizedString("Alert.Action.OpenSettings", comment: "")

        }
    }

    public struct Keyboard {

        /// Base translation: Library
        public static var Libraries : String = NSLocalizedString("Keyboard.Libraries", comment: "")

        /// Base translation: Preferences
        public static var Preference : String = NSLocalizedString("Keyboard.Preference", comment: "")

    }

    public struct Action {

        /// Base translation: Open in Web ↗︎
        public static var OpenLibraryInSafari : String = NSLocalizedString("Action.OpenLibraryInSafari", comment: "")

        /// Base translation: Reset Orders
        public static var ResetOrder : String = NSLocalizedString("Action.ResetOrder", comment: "")

    }

    public struct Notification {


        public struct Content {

            /// Base translation: Tap to show current seat status.
            public static var TapToShow : String = NSLocalizedString("Notification.Content.TapToShow", comment: "")

        }
    }

    public struct Legacy {


        public struct Title {

            /// Base translation: Preference (d)
            public static var Preference : String = NSLocalizedString("Legacy.Title.Preference", comment: "")

        }
    }

    public struct TimeInterval {

        /// Base translation: Hours
        public static var Hour : String = NSLocalizedString("TimeInterval.Hour", comment: "")

        /// Base translation: Now
        public static var Now : String = NSLocalizedString("TimeInterval.Now", comment: "")

        /// Base translation: Custom
        public static var Custom : String = NSLocalizedString("TimeInterval.Custom", comment: "")

    }

    public struct Library {

        /// Base translation: Last updated: %@
        public static func UpdatedAt(_ value1 : String) -> String {
            return String(format: NSLocalizedString("Library.UpdatedAt", comment: ""), value1)
        }


        public struct Button {

            /// Base translation: Open in Apple Maps ↗︎
            public static var OpenInAppleMaps : String = NSLocalizedString("Library.Button.OpenInAppleMaps", comment: "")

            /// Base translation: Open in Google Maps ↗︎
            public static var OpenInGoogleMaps : String = NSLocalizedString("Library.Button.OpenInGoogleMaps", comment: "")

            /// Base translation: View in Map
            public static var Map : String = NSLocalizedString("Library.Button.Map", comment: "")

            /// Base translation: Remind Me
            public static var Remind : String = NSLocalizedString("Library.Button.Remind", comment: "")

        }
    }

    public struct Title {

        /// Base translation: Library
        public static var Library : String = NSLocalizedString("Title.Library", comment: "")

        /// Base translation: Settings
        public static var Settings : String = NSLocalizedString("Title.Settings", comment: "")

    }

    public struct Media {


        public struct Attribution {

            /// Base translation: Photo by %@
            public static func Photo(_ value1 : String) -> String {
                return String(format: NSLocalizedString("Media.Attribution.Photo", comment: ""), value1)
            }

            /// Base translation: Illustration by %@
            public static func Illustration(_ value1 : String) -> String {
                return String(format: NSLocalizedString("Media.Attribution.Illustration", comment: ""), value1)
            }

            /// Base translation: Timelapse by %@
            public static func Timelapse(_ value1 : String) -> String {
                return String(format: NSLocalizedString("Media.Attribution.Timelapse", comment: ""), value1)
            }

            /// Base translation: Video by %@
            public static func Video(_ value1 : String) -> String {
                return String(format: NSLocalizedString("Media.Attribution.Video", comment: ""), value1)
            }

        }
    }

    public struct Label {

        /// Base translation: %@ Total: %@ Available: %@ Used: %@ 
        public static func ShareMessage(_ value1 : String, _ value2 : String, _ value3 : String, _ value4 : String) -> String {
            return String(format: NSLocalizedString("Label.ShareMessage", comment: ""), value1, value2, value3, value4)
        }

        /// Base translation: Vacation
        public static var Vacation : String = NSLocalizedString("Label.Vacation", comment: "")

        /// Base translation: If there is a problem with the orders, try resetting with this button.
        public static var TroubleshootDescription : String = NSLocalizedString("Label.TroubleshootDescription", comment: "")

        /// Base translation: Open in Instagram?
        public static var OpenInstagram : String = NSLocalizedString("Label.OpenInstagram", comment: "")

        /// Base translation: Oops! An error occurred.
        public static var Error : String = NSLocalizedString("Label.Error", comment: "")

        /// Base translation: Have a problem?
        public static var Troubleshoot : String = NSLocalizedString("Label.Troubleshoot", comment: "")

        /// Base translation: Start of Semester
        public static var StartOfSemester : String = NSLocalizedString("Label.StartOfSemester", comment: "")

        /// Base translation: End of Semester
        public static var EndOfSemester : String = NSLocalizedString("Label.EndOfSemester", comment: "")

        /// Base translation: Hooray!
        public static var Hooray : String = NSLocalizedString("Label.Hooray", comment: "")

        /// Base translation: Days Left
        public static var DaysLeft : String = NSLocalizedString("Label.DaysLeft", comment: "")

        /// Base translation: Loading...
        public static var Loading : String = NSLocalizedString("Label.Loading", comment: "")


        public struct Settings {

            /// Base translation: Write a review or feedback on App Store. All feedback encourages app developer!
            public static var ReviewFooter : String = NSLocalizedString("Label.Settings.ReviewFooter", comment: "")

            /// Base translation: Write a review
            public static var AppStoreReview : String = NSLocalizedString("Label.Settings.AppStoreReview", comment: "")

            /// Base translation: Auto Update
            public static var AutoUpdate : String = NSLocalizedString("Label.Settings.AutoUpdate", comment: "")

            /// Base translation: Hide
            public static var WidgetHideHeader : String = NSLocalizedString("Label.Settings.WidgetHideHeader", comment: "")

            /// Base translation: Report a bug
            public static var BugReport : String = NSLocalizedString("Label.Settings.BugReport", comment: "")

            /// Base translation: About
            public static var AboutHeader : String = NSLocalizedString("Label.Settings.AboutHeader", comment: "")

            /// Base translation: Items dragged here are hidden in Notificaiton Center.
            public static var WidgetHideFooter : String = NSLocalizedString("Label.Settings.WidgetHideFooter", comment: "")

            /// Base translation: Widget
            public static var WidgetHeader : String = NSLocalizedString("Label.Settings.WidgetHeader", comment: "")

            /// Base translation: Open Source
            public static var OpenSource : String = NSLocalizedString("Label.Settings.OpenSource", comment: "")

            /// Base translation: Today Widget Display Order
            public static var TodayOrder : String = NSLocalizedString("Label.Settings.TodayOrder", comment: "")

            /// Base translation: Show
            public static var WidgetShowHeader : String = NSLocalizedString("Label.Settings.WidgetShowHeader", comment: "")

            /// Base translation: Library Display Style
            public static var LibraryCellType : String = NSLocalizedString("Label.Settings.LibraryCellType", comment: "")

            /// Base translation: Reading Room Display Style
            public static var SectorCellType : String = NSLocalizedString("Label.Settings.SectorCellType", comment: "")

            /// Base translation: Library
            public static var LibraryHeader : String = NSLocalizedString("Label.Settings.LibraryHeader", comment: "")

            /// Base translation: General
            public static var GeneralHeader : String = NSLocalizedString("Label.Settings.GeneralHeader", comment: "")

            /// Base translation: Tip Developer
            public static var TipJar : String = NSLocalizedString("Label.Settings.TipJar", comment: "")

            /// Base translation: Library Display Order
            public static var LibraryOrder : String = NSLocalizedString("Label.Settings.LibraryOrder", comment: "")

            /// Base translation: Special Thanks
            public static var MediaProvider : String = NSLocalizedString("Label.Settings.MediaProvider", comment: "")

            /// Base translation: How to add Today widget:  1. Swipe down from the top of the screen to open Notification Center. 2.Switch to Today tab. 3.Scroll to the bottom and tap Edit. 4.Find Korea University Reading Room and tap + icon. 5. Tap Done.
            public static var WidgetInstructionFooter : String = NSLocalizedString("Label.Settings.WidgetInstructionFooter", comment: "")

            /// Base translation: Review
            public static var FeedbackHeader : String = NSLocalizedString("Label.Settings.FeedbackHeader", comment: "")

            /// Base translation: Update Interval
            public static var UpdateInterval : String = NSLocalizedString("Label.Settings.UpdateInterval", comment: "")

            /// Base translation: Sector
            public static var SectorHeader : String = NSLocalizedString("Label.Settings.SectorHeader", comment: "")

            /// Base translation: Open Settings
            public static var OpenSettings : String = NSLocalizedString("Label.Settings.OpenSettings", comment: "")

            /// Base translation: Privacy Policy
            public static var PrivacyPolicy : String = NSLocalizedString("Label.Settings.PrivacyPolicy", comment: "")

            /// Base translation: Update
            public static var UpdateHeader : String = NSLocalizedString("Label.Settings.UpdateHeader", comment: "")

        }

        public struct CellType {

            /// Base translation: Compact
            public static var Compact : String = NSLocalizedString("Label.CellType.Compact", comment: "")

            /// Base translation: Classic
            public static var Classic : String = NSLocalizedString("Label.CellType.Classic", comment: "")

            /// Base translation: Detailed
            public static var Detailed : String = NSLocalizedString("Label.CellType.Detailed", comment: "")

            /// Base translation: Very Compact
            public static var VeryCompact : String = NSLocalizedString("Label.CellType.VeryCompact", comment: "")

            /// Base translation: Default
            public static var Default : String = NSLocalizedString("Label.CellType.Default", comment: "")

            /// Base translation: Very Detailed
            public static var VeryDetailed : String = NSLocalizedString("Label.CellType.VeryDetailed", comment: "")

        }
    }
}